{"version":3,"sources":["constants.js","actions/productActions.js","components/Product/Product.js","components/IconsContainer/IconsContainer.js","components/SingleIcon/SingleIcon.js","actions/productSettingsActions.js","components/ColorPicker/ColorPicker.js","components/SingleProductIcon/SingleProductIcon.js","components/Download/Download.js","components/Alert/Alert.js","components/Message/Message.js","components/RangeSlider/RangeSlider.js","components/CheckboxInput/CheckboxInput.js","components/SearchBar/SearchBar.js","components/SettingsTitle/SettingsTitle.js","components/Loader/Loader.js","containers/App.js","reducers/productReducer.js","reducers/productSettingsReducer.js","store.js","reducers/alertReducer.js","index.js"],"names":["GET_ALL_ICONS_REQUEST","GET_ALL_ICONS_SUCCESS","GET_ALL_ICONS_FAIL","ADD_ICON_TO_PRODUCT","UPDATE_BG_COLOR","SET_ICONS","LIST_UPLOADED_ICONS","UPDATE_FILTERED_ICONS","SET_ALERT","PRODUCT_SETTINGS_UPDATE","PRODUCT_SETTINGS_IS_COLOR","PRODUCT_SETTINGS_SEARCH","saveNewIcons","payload","type","setAlert","Product","downloadRef","useState","isHovered","setIsHovered","dragId","setDragId","viewTrash","setViewTrash","showMessage","setShowMessage","messageShownOnce","setMessageShownOnce","dispatch","useDispatch","productIcons","useSelector","state","product","bgColor","productSettings","handleDrag","e","currentTarget","id","handleDrop","dragIcon","find","icon","dropIcon","dragIconOrder","order","dropIconOrder","newIcons","map","filter","handleDragOver","preventDefault","handleDragEnd","handleMouseEnter","useEffect","timer","setTimeout","clearTimeout","className","draggable","onDrop","onDragOver","onDragEnter","onDragLeave","ref","style","background","color","amount","replace","Math","min","max","parseInt","toString","substr","lightenColor","length","sort","a","b","IconsContainer","filteredIcons","loading","error","searchQuery","url","fetch","res","json","icons","console","log","properties","name","message","SingleIcon","showColoredIcons","onClick","getState","show","msg","curIcon","split","updateBgColor","ColorPicker","showColorPicker","setShowColorPicker","text","backgroundColor","value","onChange","target","onChangeComplete","hex","SingleProductIcon","size","space","iconStyles","fontSize","currentVal","marginLeft","marginRight","onDragStart","onDragEnd","onMouseEnter","Download","downloadType","setDownloadType","downloadSettings","scale","DEFAULT_PNG","fileName","html2CanvasOptions","DEFAULT_JPEG","exportComponent","node","element","ReactDOM","findDOMNode","current","html2canvas","scrollY","window","useCORS","then","canvas","uri","filename","link","document","createElement","download","href","body","appendChild","click","removeChild","open","saveAs","toDataURL","Alert","alert","timeout","Message","children","defaultProps","RangeSlider","minVal","maxVal","title","CheckboxInput","checked","htmlFor","SearchBar","query","allIcons","newFilteredIcons","startsWith","placeholder","SettingsTitle","Loader","App","useRef","rel","uploadedIconsFromStorage","localStorage","getItem","JSON","parse","initialState","middleware","thunk","rootReducer","combineReducers","uploadedIcons","action","store","createStore","composeWithDevTools","applyMiddleware","render","getElementById"],"mappings":"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","file":"static/js/main.ebb10af4.chunk.js","sourcesContent":["// product actions\r\nexport const GET_ALL_ICONS_REQUEST = 'GET_ALL_ICONS_REQUEST';\r\nexport const GET_ALL_ICONS_SUCCESS = 'GET_ALL_ICONS_SUCCESS';\r\nexport const GET_ALL_ICONS_FAIL = 'GET_ALL_ICONS_FAIL';\r\nexport const ADD_ICON_TO_PRODUCT = 'ADD_ICON_TO_PRODUCT';\r\nexport const UPDATE_BG_COLOR = 'UPDATE_BG_COLOR';\r\nexport const SET_ICONS = 'SET_ICONS';\r\nexport const LIST_UPLOADED_ICONS = 'LIST_UPLOADED_ICONS';\r\nexport const UPDATE_FILTERED_ICONS = 'UPDATE_FILTERED_ICONS';\r\n\r\n// alert actions\r\nexport const SET_ALERT = 'SET_ALERT';\r\n\r\n// upload actions\r\nexport const SHOW_UPLOAD_MODAL = 'SHOW_UPLOAD_MODAL';\r\nexport const UPLOAD_ICON_TO_LIST_REQUEST = 'UPLOAD_ICON_TO_LIST_REQUEST';\r\nexport const UPLOAD_ICON_TO_LIST_SUCCESS = 'UPLOAD_ICON_TO_LIST_SUCCESS';\r\nexport const UPLOAD_ICON_TO_LIST_FAIL = 'UPLOAD_ICON_TO_LIST_FAIL';\r\nexport const UPLOAD_ICON_TO_LIST_RESET = 'UPLOAD_ICON_TO_LIST_RESET';\r\nexport const UPLOAD_ICON_TO_LIST_REMOVE_ERROR_MSG =\r\n  'UPLOAD_ICON_TO_LIST_REMOVE_ERROR_MSG';\r\n\r\n// product settings action\r\nexport const PRODUCT_SETTINGS_UPDATE = 'PRODUCT_SETTINGS_UPDATE';\r\nexport const PRODUCT_SETTINGS_IS_COLOR = 'PRODUCT_SETTINGS_IS_COLOR';\r\nexport const PRODUCT_SETTINGS_SEARCH = 'PRODUCT_SETTINGS_SEARCH';\r\n","import {\r\n  ADD_ICON_TO_PRODUCT,\r\n  SET_ALERT,\r\n  SET_ICONS,\r\n  GET_ALL_ICONS_REQUEST,\r\n  GET_ALL_ICONS_SUCCESS,\r\n  GET_ALL_ICONS_FAIL,\r\n} from '../constants';\r\n\r\nexport const saveNewIcons = payload => ({\r\n  type: SET_ICONS,\r\n  payload,\r\n});\r\n\r\nexport const setAlert = payload => ({ type: SET_ALERT, payload });\r\n\r\nexport const getAllIcons = url => async dispatch => {\r\n  try {\r\n    dispatch({ type: GET_ALL_ICONS_REQUEST });\r\n    const res = await fetch(url);\r\n    const { icons } = await res.json();\r\n    console.log(icons);\r\n\r\n    let newIcons = icons.map(icon => {\r\n      const { id, name } = icon.properties;\r\n      return { id, name };\r\n    });\r\n\r\n    dispatch({ type: GET_ALL_ICONS_SUCCESS, payload: newIcons });\r\n  } catch (error) {\r\n    dispatch({ type: GET_ALL_ICONS_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const addIconToProduct = icon => (dispatch, getState) => {\r\n  const { id, name } = icon;\r\n  const {\r\n    product: { productIcons },\r\n  } = getState();\r\n\r\n  if (productIcons.length === 5) {\r\n    dispatch(\r\n      setAlert({\r\n        show: true,\r\n        msg:\r\n          'Until 5 Icons. You can delete and reorder icons with Drag & Drop.',\r\n      })\r\n    );\r\n    return;\r\n  }\r\n\r\n  const isIconExists = productIcons.find(icon => icon.id === id);\r\n  if (isIconExists) {\r\n    dispatch(setAlert({ show: true, msg: 'Icon was already selected' }));\r\n  } else {\r\n    const curIcon = { id, name };\r\n    curIcon.order = productIcons.length;\r\n    dispatch({ type: ADD_ICON_TO_PRODUCT, payload: curIcon });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './Product.scss';\r\nimport { SingleProductIcon, Message } from '../../components';\r\nimport { saveNewIcons } from '../../actions/productActions';\r\n\r\nconst Product = ({ downloadRef }) => {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [dragId, setDragId] = useState(null);\r\n  const [viewTrash, setViewTrash] = useState(false);\r\n\r\n  const [showMessage, setShowMessage] = useState(false);\r\n  const [messageShownOnce, setMessageShownOnce] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const { productIcons } = useSelector(state => state.product);\r\n  const { bgColor } = useSelector(state => state.productSettings);\r\n\r\n  const handleDrag = e => {\r\n    setViewTrash(true);\r\n    setDragId(e.currentTarget.id);\r\n  };\r\n\r\n  const handleDrop = e => {\r\n    setViewTrash(false);\r\n\r\n    if (e.currentTarget.id === 'trash') {\r\n      const newIcons = productIcons.filter(icon => icon.id !== +dragId);\r\n      dispatch(saveNewIcons(newIcons));\r\n      return;\r\n    }\r\n\r\n    const dragIcon = productIcons.find(icon => icon.id === +dragId);\r\n    const dropIcon = productIcons.find(icon => icon.id === +e.currentTarget.id);\r\n\r\n    const dragIconOrder = dragIcon.order;\r\n    const dropIconOrder = dropIcon.order;\r\n\r\n    const newIcons = productIcons.map(icon => {\r\n      if (icon.id === +dragId) {\r\n        icon.order = dropIconOrder;\r\n      }\r\n      if (icon.id === +e.currentTarget.id) {\r\n        icon.order = dragIconOrder;\r\n      }\r\n      return icon;\r\n    });\r\n\r\n    dispatch(saveNewIcons(newIcons));\r\n  };\r\n\r\n  const handleDragOver = e => {\r\n    e.preventDefault();\r\n    setIsHovered(true);\r\n  };\r\n\r\n  const handleDragEnd = e => {\r\n    e.preventDefault();\r\n    setViewTrash(false);\r\n  };\r\n\r\n  const handleDragEnter = e => {\r\n    setIsHovered(true);\r\n  };\r\n\r\n  const handleMouseEnter = e => {\r\n    setIsHovered(true);\r\n    if (!messageShownOnce) setShowMessage(true);\r\n  };\r\n\r\n  const handleDragLeave = e => {\r\n    setTimeout(() => setIsHovered(false), 1000);\r\n  };\r\n\r\n  const lightenColor = (color, amount = 20) => {\r\n    return (\r\n      '#' +\r\n      color\r\n        .replace(/^#/, '')\r\n        .replace(/../g, color =>\r\n          (\r\n            '0' +\r\n            Math.min(255, Math.max(0, parseInt(color, 16) + amount)).toString(\r\n              16\r\n            )\r\n          ).substr(-2)\r\n        )\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (showMessage) {\r\n      setMessageShownOnce(true);\r\n      timer = setTimeout(() => setShowMessage(false), 1500);\r\n    }\r\n    return () => clearTimeout(timer);\r\n  }, [showMessage]);\r\n\r\n  return (\r\n    <>\r\n      {showMessage ? (\r\n        <Message type='info'>\r\n          Use Drap and Drop to Delete and Reorder Icons\r\n        </Message>\r\n      ) : null}\r\n      <div className='product'>\r\n        {viewTrash && (\r\n          <button\r\n            className='product__delete'\r\n            id='trash'\r\n            draggable={true}\r\n            onDrop={handleDrop}\r\n            onDragOver={e => e.preventDefault()}\r\n            onDragEnter={handleDragEnter}\r\n            onDragLeave={handleDragLeave}\r\n          >\r\n            <div className={`trash-box ${isHovered ? 'hovered' : ''}`}>\r\n              <div className='trash-top'></div>\r\n              <div className='trash-btm'>\r\n                <div className='trash-lines'>\r\n                  <div className='trash-line'></div>\r\n                  <div className='trash-line'></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </button>\r\n        )}\r\n\r\n        <div\r\n          className='product__banner'\r\n          ref={downloadRef}\r\n          id='banner'\r\n          style={{\r\n            background: `radial-gradient(${lightenColor(\r\n              bgColor\r\n            )} 5%, ${bgColor} 100%)`,\r\n          }}\r\n        >\r\n          {productIcons.length > 0 ? (\r\n            productIcons\r\n              .sort((a, b) => a.order - b.order)\r\n              .map(icon => {\r\n                return (\r\n                  <SingleProductIcon\r\n                    key={icon.id}\r\n                    {...icon}\r\n                    handleDrag={handleDrag}\r\n                    handleDrop={handleDrop}\r\n                    handleDragOver={handleDragOver}\r\n                    handleDragEnd={handleDragEnd}\r\n                    handleMouseEnter={handleMouseEnter}\r\n                    isHovered={viewTrash || isHovered}\r\n                  />\r\n                );\r\n              })\r\n          ) : (\r\n            <h3>Add Icons From The List :)</h3>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React, { useEffect } from 'react';\r\nimport './IconsContainer.scss';\r\nimport { SingleIcon, Loader, Message } from '..';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getAllIcons } from '../../actions/productActions';\r\n\r\nconst IconsContainer = () => {\r\n  const { filteredIcons, loading, error } = useSelector(state => state.product);\r\n  const { searchQuery } = useSelector(state => state.productSettings);\r\n  const dispatch = useDispatch();\r\n  const deviconsUrl =\r\n    'https://raw.githubusercontent.com/devicons/devicon/master/icomoon.json';\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllIcons(deviconsUrl));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className='icons-container'>\r\n      {loading && <Loader />}\r\n      {error && (\r\n        <Message type='danger'>Unexpected error, please try again</Message>\r\n      )}\r\n      {filteredIcons.length === 0 && searchQuery && (\r\n        <Message type='info'>No search results for {searchQuery}</Message>\r\n      )}\r\n      {filteredIcons.map(icon => {\r\n        return <SingleIcon key={icon.id} {...icon} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IconsContainer;\r\n","import React from 'react';\r\nimport './SingleIcon.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addIconToProduct } from '../../actions/productActions';\r\n\r\nconst SingleIcon = ({ id, name }) => {\r\n  const dispatch = useDispatch();\r\n  const { showColoredIcons } = useSelector(state => state.productSettings);\r\n\r\n  return (\r\n    <div\r\n      className='single-icon'\r\n      onClick={() => dispatch(addIconToProduct({ id, name }))}\r\n    >\r\n      <i\r\n        className={`single-icon devicon-${name} ${\r\n          showColoredIcons && 'colored'\r\n        } `}\r\n      ></i>\r\n      <p>{name.split('-')[0]}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleIcon;\r\n","import {\r\n  PRODUCT_SETTINGS_SEARCH,\r\n  UPDATE_FILTERED_ICONS,\r\n  UPDATE_BG_COLOR,\r\n} from '../constants';\r\n\r\nexport const updateBgColor = payload => ({ type: UPDATE_BG_COLOR, payload });\r\n\r\nexport const updateSearchQuery = query => (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_SETTINGS_SEARCH, payload: query });\r\n  const {\r\n    product: { allIcons },\r\n  } = getState();\r\n  if (query === '') {\r\n    return dispatch({ type: UPDATE_FILTERED_ICONS, payload: allIcons });\r\n  }\r\n  const newFilteredIcons = allIcons.filter(icon => icon.name.startsWith(query));\r\n  dispatch({ type: UPDATE_FILTERED_ICONS, payload: newFilteredIcons });\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './ColorPicker.scss';\r\nimport { SketchPicker } from 'react-color';\r\nimport { SettingsTitle } from '../../components';\r\nimport { updateBgColor } from '../../actions/productSettingsActions';\r\n\r\nconst ColorPicker = () => {\r\n  const [showColorPicker, setShowColorPicker] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const { bgColor } = useSelector(state => state.productSettings);\r\n  return (\r\n    <div className='color-picker'>\r\n      <SettingsTitle text='Background color' />\r\n      <div className='color-picker__control'>\r\n        <div\r\n          className='color-picker__control-btn'\r\n          style={{ backgroundColor: bgColor }}\r\n          onClick={() => setShowColorPicker(!showColorPicker)}\r\n        ></div>\r\n        <input\r\n          type='text'\r\n          value={bgColor}\r\n          onChange={e => dispatch(updateBgColor(e.target.value))}\r\n        />\r\n      </div>\r\n      {showColorPicker && (\r\n        <div className='color-picker__container'>\r\n          <SketchPicker\r\n            color={bgColor}\r\n            onChangeComplete={color => dispatch(updateBgColor(color.hex))}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorPicker;\r\n","import React from 'react';\r\nimport './SingleProductIcon.scss';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst SingleProductIcon = ({\r\n  name,\r\n  id,\r\n  handleDrag,\r\n  handleDrop,\r\n  handleDragOver,\r\n  handleDragEnd,\r\n  handleMouseEnter,\r\n  isHovered,\r\n}) => {\r\n  const { size, space, showColoredIcons } = useSelector(\r\n    state => state.productSettings\r\n  );\r\n\r\n  const iconStyles = {\r\n    fontSize: `${size.currentVal}px`,\r\n    marginLeft: `${space.currentVal}px`,\r\n    marginRight: `${space.currentVal}px`,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`single-product-icon ${isHovered && 'shake'}`}\r\n      draggable={true}\r\n      id={id}\r\n      onDragOver={handleDragOver}\r\n      onDragStart={handleDrag}\r\n      onDrop={handleDrop}\r\n      onDragEnd={handleDragEnd}\r\n      onMouseEnter={handleMouseEnter}\r\n      style={iconStyles}\r\n    >\r\n      <i\r\n        className={`single-product-icon devicon-${name} ${\r\n          showColoredIcons && 'colored'\r\n        } `}\r\n      ></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleProductIcon;\r\n","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport html2canvas from 'html2canvas';\r\nimport './Download.scss';\r\n\r\nimport { FaDownload } from 'react-icons/fa';\r\nimport { BsChevronDown } from 'react-icons/bs';\r\n\r\nconst Download = ({ downloadRef }) => {\r\n  const [downloadType, setDownloadType] = useState('.png');\r\n\r\n  const downloadSettings = {\r\n    // width: 1584,\r\n    // height: 396,\r\n    scale: 4,\r\n  };\r\n\r\n  const DEFAULT_PNG = {\r\n    fileName: 'linkedinbanner.png',\r\n    type: 'image/png',\r\n    html2CanvasOptions: { ...downloadSettings },\r\n  };\r\n\r\n  const DEFAULT_JPEG = {\r\n    fileName: 'linkedinbanner.jpg',\r\n    type: 'image/jpeg',\r\n    html2CanvasOptions: { ...downloadSettings },\r\n  };\r\n\r\n  const saveAs = (uri, filename) => {\r\n    const link = document.createElement('a');\r\n\r\n    if (typeof link.download === 'string') {\r\n      link.href = uri;\r\n      link.download = filename;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else {\r\n      window.open(uri);\r\n    }\r\n  };\r\n\r\n  const exportComponent = (node, { fileName, type, html2CanvasOptions }) => {\r\n    const element = ReactDOM.findDOMNode(node.current);\r\n    return html2canvas(element, {\r\n      scrollY: -window.scrollY,\r\n      useCORS: true,\r\n      ...html2CanvasOptions,\r\n    }).then(canvas => {\r\n      saveAs(canvas.toDataURL(type, 1.0), fileName);\r\n    });\r\n  };\r\n\r\n  const downloadComponent = () => {\r\n    downloadType === '.png'\r\n      ? exportComponent(downloadRef, { ...DEFAULT_PNG })\r\n      : exportComponent(downloadRef, { ...DEFAULT_JPEG });\r\n  };\r\n\r\n  const typeHandler = () => {\r\n    setDownloadType(current => (current === '.png' ? '.jpg' : '.png'));\r\n  };\r\n\r\n  return (\r\n    <div className='download' id='banner2'>\r\n      <button className='download__button' onClick={downloadComponent}>\r\n        Download\r\n        <FaDownload />\r\n      </button>\r\n      <button className='download__type' onClick={typeHandler}>\r\n        {downloadType} <BsChevronDown />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Download;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './Alert.scss';\r\nimport { SET_ALERT } from '../../constants';\r\n\r\nconst Alert = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    alert: { show, msg },\r\n  } = useSelector(state => state.alert);\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(\r\n      () => dispatch({ type: SET_ALERT, payload: { show: false, msg: '' } }),\r\n      2000\r\n    );\r\n    return () => clearTimeout(timeout);\r\n  });\r\n\r\n  if (!show) return null;\r\n\r\n  return (\r\n    <div className='alerts'>\r\n      <div className='alerts__alert'>{msg}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport './Message.scss';\r\n\r\nconst Message = ({ type, children }) => {\r\n  return <p className={`message ${type}`}>{children}</p>;\r\n};\r\n\r\nMessage.defaultProps = {\r\n  type: 'info',\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './RangeSlider.scss';\r\nimport { SettingsTitle } from '../../components';\r\nimport { PRODUCT_SETTINGS_UPDATE } from '../../constants';\r\n\r\nconst RangeSlider = ({ minVal, maxVal, currentVal, name, title }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const updateSettings = e => {\r\n    let value = +e.target.value;\r\n    dispatch({ type: PRODUCT_SETTINGS_UPDATE, payload: { value, name } });\r\n  };\r\n\r\n  return (\r\n    <div className='range-slider'>\r\n      <SettingsTitle text={title} />\r\n\r\n      <div className='range-slider__container'>\r\n        <input\r\n          type='range'\r\n          name={name}\r\n          min={minVal}\r\n          max={maxVal}\r\n          value={currentVal}\r\n          onChange={updateSettings}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RangeSlider;\r\n","import React from 'react';\r\nimport './CheckboxInput.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SettingsTitle } from '../../components';\r\nimport { PRODUCT_SETTINGS_IS_COLOR } from '../../constants';\r\n\r\nconst CheckboxInput = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { showColoredIcons } = useSelector(state => state.productSettings);\r\n\r\n  const changeHandler = e => {\r\n    dispatch({ type: PRODUCT_SETTINGS_IS_COLOR, payload: e.target.checked });\r\n  };\r\n\r\n  return (\r\n    <div className='checkbox'>\r\n      <SettingsTitle text='Icon color' />\r\n      <div className='checkbox__container'>\r\n        <input\r\n          type='checkbox'\r\n          id='coloredIcons'\r\n          className='checkbox__input'\r\n          checked={showColoredIcons}\r\n          onChange={changeHandler}\r\n        />\r\n        <label htmlFor='coloredIcons'>Colored Icons</label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckboxInput;\r\n","import React from 'react';\r\nimport './SearchBar.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SettingsTitle } from '../../components';\r\nimport { updateSearchQuery } from '../../actions/productSettingsActions';\r\n\r\nconst SearchBar = () => {\r\n  const { searchQuery } = useSelector(state => state.productSettings);\r\n  const dispatch = useDispatch();\r\n\r\n  const changeHandler = e => dispatch(updateSearchQuery(e.target.value));\r\n\r\n  return (\r\n    <div className='searchbar'>\r\n      {/* <h5>Search icon</h5> */}\r\n      <SettingsTitle text='Search icon' />\r\n      <input\r\n        type='text'\r\n        className='searchbar__input'\r\n        value={searchQuery}\r\n        onChange={changeHandler}\r\n        placeholder='Search..'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport './SettingsTitle.scss';\r\n\r\nconst SettingsTitle = ({ text }) => {\r\n  return <h5 className='settings-title '>{text}</h5>;\r\n};\r\n\r\nexport default SettingsTitle;\r\n","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='loader'>\r\n      <div className='loadingio-spinner-atom-c0scezfuou7'>\r\n        <div className='ldio-1a8zae19lw6'>\r\n          <div>\r\n            <div>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n            <div>\r\n              <div>\r\n                <div></div>\r\n              </div>\r\n              <div>\r\n                <div></div>\r\n              </div>\r\n              <div>\r\n                <div></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport './App.scss';\nimport {\n  Product,\n  IconsContainer,\n  ColorPicker,\n  Download,\n  Alert,\n  RangeSlider,\n  CheckboxInput,\n  SearchBar,\n} from '../components';\nimport { FaGithub, FaLinkedin } from 'react-icons/fa';\n\nfunction App() {\n  const downloadRef = useRef();\n  const { size, space } = useSelector(state => state.productSettings);\n\n  return (\n    <div className='app'>\n      <div className='app__left'>\n        <h1>\n          LinkedIn Background Generator <FaLinkedin />\n        </h1>\n        <div className='app__left-container'>\n          <Product downloadRef={downloadRef} />\n          <div className='app__left-container-settings'>\n            <ColorPicker />\n            <CheckboxInput />\n            <RangeSlider {...size} />\n            <RangeSlider {...space} />\n            <SearchBar />\n          </div>\n          <Download downloadRef={downloadRef} />\n        </div>\n        <a\n          href='https://github.com/adi221/linkedin-background-generator'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <FaGithub /> View on GitHub\n        </a>\n      </div>\n      <div className='app__right'>\n        <IconsContainer />\n      </div>\n      <Alert />\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n  GET_ALL_ICONS_REQUEST,\r\n  GET_ALL_ICONS_SUCCESS,\r\n  GET_ALL_ICONS_FAIL,\r\n  ADD_ICON_TO_PRODUCT,\r\n  SET_ICONS,\r\n  LIST_UPLOADED_ICONS,\r\n  UPDATE_FILTERED_ICONS,\r\n} from '../constants';\r\n\r\nconst uploadedIconsFromStorage = localStorage.getItem('uploadedIcons')\r\n  ? JSON.parse(localStorage.getItem('uploadedIcons'))\r\n  : [];\r\n\r\nexport const productReducer = (\r\n  state = {\r\n    productIcons: [],\r\n    allIcons: [...uploadedIconsFromStorage],\r\n    filteredIcons: [...uploadedIconsFromStorage],\r\n    loading: false,\r\n    error: false,\r\n    uploadedIcons: uploadedIconsFromStorage,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case GET_ALL_ICONS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case GET_ALL_ICONS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: false,\r\n        allIcons: action.payload,\r\n        filteredIcons: action.payload,\r\n      };\r\n    case GET_ALL_ICONS_FAIL:\r\n      return { ...state, loading: false, error: action.payload };\r\n    case ADD_ICON_TO_PRODUCT:\r\n      return {\r\n        ...state,\r\n        productIcons: [...state.productIcons, action.payload],\r\n      };\r\n    case SET_ICONS:\r\n      return { ...state, productIcons: action.payload };\r\n    case LIST_UPLOADED_ICONS:\r\n      return {\r\n        ...state,\r\n        uploadedIcons: [...state.uploadedIcons, action.payload],\r\n        allIcons: [...state.allIcons, action.payload],\r\n      };\r\n    case UPDATE_FILTERED_ICONS:\r\n      return { ...state, filteredIcons: action.payload };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","import {\r\n  PRODUCT_SETTINGS_UPDATE,\r\n  PRODUCT_SETTINGS_IS_COLOR,\r\n  PRODUCT_SETTINGS_SEARCH,\r\n  UPDATE_BG_COLOR,\r\n} from '../constants';\r\n\r\nconst initialState = {\r\n  size: {\r\n    name: 'size',\r\n    title: 'Icon size',\r\n    currentVal: 45,\r\n    minVal: 35,\r\n    maxVal: 55,\r\n  },\r\n  space: {\r\n    name: 'space',\r\n    title: 'Space between icons',\r\n    currentVal: 10,\r\n    minVal: 7,\r\n    maxVal: 13,\r\n  },\r\n  showColoredIcons: true,\r\n  searchQuery: '',\r\n  bgColor: '#434255',\r\n};\r\n\r\nexport const productSettingsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_SETTINGS_UPDATE:\r\n      const { name, value } = action.payload;\r\n      return { ...state, [name]: { ...state[name], currentVal: value } };\r\n    case PRODUCT_SETTINGS_IS_COLOR:\r\n      return { ...state, showColoredIcons: action.payload };\r\n    case PRODUCT_SETTINGS_SEARCH:\r\n      return { ...state, searchQuery: action.payload };\r\n    case UPDATE_BG_COLOR:\r\n      return { ...state, bgColor: action.payload };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport { productReducer } from './reducers/productReducer';\r\nimport { alertReducer } from './reducers/alertReducer';\r\nimport { productSettingsReducer } from './reducers/productSettingsReducer';\r\n\r\nconst middleware = [thunk];\r\n\r\nconst rootReducer = combineReducers({\r\n  product: productReducer,\r\n  alert: alertReducer,\r\n  productSettings: productSettingsReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nconsole.log(store.getState());\r\n\r\nexport default store;\r\n","import { SET_ALERT } from '../constants';\r\n\r\nexport const alertReducer = (\r\n  state = { alert: { show: false, msg: '' } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      const { show, msg } = action.payload;\r\n      return { alert: { show, msg } };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.scss';\nimport App from './containers/App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}